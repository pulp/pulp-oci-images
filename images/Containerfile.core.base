FROM registry.fedoraproject.org/fedora:36


RUN rm /etc/rpm/macros.image-language-conf
RUN echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONUNBUFFERED=0
ENV DJANGO_SETTINGS_MODULE=pulpcore.app.settings
ENV PULP_SETTINGS=/etc/pulp/settings.py
ENV _BUILDAH_STARTED_IN_USERNS=""
ENV BUILDAH_ISOLATION=chroot

# Install updates & dnf plugins before disabling python36 to prevent errors
RUN dnf -y install dnf-plugins-core && \
    dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    dnf config-manager --set-enabled powertools && \
    dnf -y update

# use python38
RUN dnf -y module disable python36
RUN dnf -y module enable python38

# The Fedora 30 image already has tsflags=nodocs set in dnf.conf
#
# wget & git are presumably needed for purposes like pip installs from git
#
# libxcrypt-compat is needed by psycopg2-binary from PyPI
#
# python3-psycopg2 is installed by pulp_installer
#
# glibc-langpack-en is needed to provide the en_US.UTF-8 locale, which Pulp
# seems to need.
#
# openssl-devel, python3-devel, and gcc are for testing pulp-certguard
#
# TODO: Investigate differences between `dnf builddep createrepo_c` vs the list
# of dependencies below. For example, drpm-devel.
RUN dnf -y install python38 python38-cryptography python38-devel && \
    dnf -y install openssl openssl-devel && \
    dnf -y install openldap-devel && \
    dnf -y install wget git && \
    dnf -y install python3-psycopg2 && \
    dnf -y install redhat-rpm-config gcc cargo libffi-devel && \
    dnf -y install glibc-langpack-en && \
    dnf -y install python3-libmodulemd && \
    dnf -y install python3-libcomps && \
    dnf -y install libpq-devel && \
    dnf -y install python3-setuptools && \
    dnf -y install swig && \
    dnf -y install buildah --exclude container-selinux && \
    dnf -y install xz && \
    dnf -y install libmodulemd-devel && \
    dnf -y install libcomps-devel && \
    dnf -y install zchunk-devel && \
    dnf -y install ninja-build && \
    dnf -y install cairo-devel cmake gobject-introspection-devel cairo-gobject-devel && \
    dnf -y install libcurl-devel libxml2-devel sqlite-devel file-devel && \
    dnf -y install ostree-libs ostree && \
    dnf -y install skopeo && \
    dnf -y install podman && \
    dnf -y install sudo && \
    dnf -y install zstd && \
    dnf clean all

# Need to install optional dep, rhsm, for pulp-certguard
RUN pip install  \
	rhsm \
	setproctitle \
	gunicorn \
        python-nginx \
	"django-storages[boto3,azure]>=1.12.2" \
	"requests[use_chardet_on_py3]" \
	pulpcore

RUN groupadd -g 700 --system pulp
RUN useradd -d /var/lib/pulp --system -u 700 -g pulp pulp
RUN usermod --add-subuids 100000-165535 --add-subgids 100000-165535 pulp

RUN mkdir -p /etc/pulp/certs \
			 /var/lib/operator/static \
			 /var/lib/pulp/media \
			 /var/lib/pulp/assets \
	         /var/lib/pulp/scripts \
			 /var/lib/pulp/tmp

# https://github.com/python-ldap/python-ldap/issues/432#issuecomment-1016756358
RUN ln -s /usr/lib64/libldap.so /usr/lib64/libldap_r.so

RUN PULP_STATIC_ROOT=/var/lib/operator/static/ PULP_CONTENT_ORIGIN=localhost \
	/usr/local/bin/pulpcore-manager collectstatic --clear --noinput --link

RUN chown pulp:pulp -R /var/lib/pulp \
	/var/lib/operator/static

COPY images/assets/readyz.py /usr/bin/readyz.py
COPY images/assets/route_paths.py /usr/bin/route_paths.py
COPY images/assets/wait_on_postgres.py /usr/bin/wait_on_postgres.py
COPY images/assets/wait_on_database_migrations.sh /usr/bin/wait_on_database_migrations.sh
COPY images/assets/pulp-common-entrypoint.sh /pulp-common-entrypoint.sh
COPY images/assets/pulp-api /usr/bin/pulp-api
COPY images/assets/pulp-content /usr/bin/pulp-content
COPY images/assets/pulp-resource-manager /usr/bin/pulp-resource-manager
COPY images/assets/pulp-worker /usr/bin/pulp-worker

# Need to precreate when running pulp as the pulp user
RUN touch /var/log/galaxy_api_access.log && \
	chown pulp:pulp /var/log/galaxy_api_access.log && \
	chmod u+rw /var/log/galaxy_api_access.log

ENTRYPOINT ["/pulp-common-entrypoint.sh"]
