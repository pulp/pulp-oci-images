FROM quay.io/centos/centos:stream8
# https://ryandaniels.ca/blog/docker-dockerfile-arg-from-arg-trouble/
ARG SCHEME="http"

COPY s6-overlay-amd64.tar.gz /tmp

RUN tar xzf /tmp/s6-overlay-amd64.tar.gz -C / --exclude="./bin" && \
    tar xzf /tmp/s6-overlay-amd64.tar.gz -C /usr ./bin

# https://superuser.com/questions/959380/how-do-i-install-generate-all-locales-on-fedora
# This may not be necessary anymore because Fedora 30, unlike CentOS 7, has
# glibc subpackages like glibc-langpack-en.
RUN rm /etc/rpm/macros.image-language-conf
RUN echo 'LANG="en_US.UTF-8"' > /etc/locale.conf
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PYTHONUNBUFFERED=0
ENV DJANGO_SETTINGS_MODULE=pulpcore.app.settings
ENV PULP_SETTINGS=/etc/pulp/settings.py
ENV _BUILDAH_STARTED_IN_USERNS=""
ENV BUILDAH_ISOLATION=chroot

# use python38
RUN dnf -y module disable python36
RUN dnf -y module enable python38

# glibc-langpack-en is needed to provide the en_US.UTF-8 locale, which Pulp
# seems to need.
#
# The last 5 lines (before clean) are needed until python3-createrepo_c gets an
# RPM upgrade to 0.16.2. Until then, we install & build it from PyPI.
RUN dnf -y install dnf-plugins-core && \
    dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    dnf config-manager --set-enabled powertools && \
    dnf -y module enable postgresql:12 && \
    dnf -y update && \
    dnf -y install elfutils-debuginfod && \
    dnf -y install python38 python38-devel && \
    dnf -y install openssl && \
    dnf -y install openldap-devel && \
    dnf -y install wget git && \
    dnf -y install python3-psycopg2 && \
    dnf -y install glibc-langpack-en && \
    dnf -y install python3-libmodulemd && \
    dnf -y install python3-libcomps && \
    dnf -y install postgresql && \
    dnf -y install postgresql-contrib && \
    dnf -y install postgresql-server && \
    dnf -y install libpq-devel && \
    dnf -y install nginx && \
    dnf -y install redis && \
    dnf -y install python3-setuptools && \
    dnf -y install python3-cryptography && \
    dnf -y install buildah --exclude container-selinux && \
    dnf -y install libmodulemd-devel && \
    dnf -y install libcomps-devel && \
    dnf -y install zchunk-devel && \
    dnf -y install ninja-build && \
    dnf -y install 'dnf-command(builddep)' && \
    dnf -y install cairo-devel cmake gobject-introspection-devel cairo-gobject-devel && \
    dnf -y install libcurl-devel libxml2-devel sqlite-devel file-devel && \
    dnf -y install ostree-libs ostree && \
    dnf -y install skopeo && \
    dnf -y install podman && \
    dnf -y install sudo && \
    dnf -y install zstd && \
    dnf clean all

RUN sed 's|^#mount_program|mount_program|g' -i /etc/containers/storage.conf

RUN mkdir -p /database \
             /etc/nginx/pulp \
             /etc/pulp \
             /etc/ssl/pulp \
             /nginx \
             /var/lib/pgsql \
             /var/lib/pulp/assets \
             /var/lib/pulp/media \
             /var/run/pulpcore-resource-manager \
             /var/run/pulpcore-worker-1 \
             /var/run/pulpcore-worker-2

RUN pip3 install --upgrade pip packaging

RUN echo "/var/lib/pgsql true postgres 0600 0750" >> /etc/fix-attrs.d/postgres

ARG DEBUGINFOD_OPTIONS=""

COPY assets/openssl.cnf /etc/ssl/pulp/openssl.cnf
COPY assets/v3.cnf /etc/ssl/pulp/v3.cnf
COPY assets/wait_on_database_migrations.sh /database/assets/wait_on_database_migrations.sh
COPY assets/ssl_nginx.conf /nginx/ssl_nginx.conf
COPY assets/nginx.conf /nginx/nginx.conf
COPY assets/webserver.sh /nginx/webserver.sh
COPY assets/services /etc/services.d
COPY assets/init /etc/cont-init.d
COPY --chmod=555 assets/start_script.sh /start_script.sh

RUN /nginx/webserver.sh

ENV DEBUGINFOD_ENV=""
ENTRYPOINT /start_script.sh "${DEBUGINFOD_ENV}"

EXPOSE 80
